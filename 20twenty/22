二项树：递归定义的有序树
二项树B(k)由两棵二项树B(k-1)连接而成，其中一棵树是另一个树的根的最左孩子
性质：
B(k)的性质：
1）共有2的k次方个结点
2）树的高度为k
3）在深度i恰有（k i）个结点（k、i组合，即在k个数中选出i个树的选法数量）。其中i=0,1,2,...，k
4）根的深度为k，它大于任何其它结点的度数；并且，如果根的子女从左到右编号为k-1,k-2,...，0,子女i是子树B(i)的根
5）推论：在一棵包含n个结点的二项树中，任意结点的最大度数为lgn

二项堆H 由一组二项树组成，其满足性质：
1）H中每一二项树都遵循最小堆的性质
2）对任意非负整数k，在H中至多有一棵二项树的根具有度数k

结点域：key关键字，p指向父结点指针，child指向最左孩子指针，sibling指向紧右兄弟的指针，degree结点的子女个数

操作：
MAKE-HEAP()
INSERT(H,x)
MINIMUM(H)
EXTRACT-MIN(H)
UNION(H1,H2)
DECREASE-KEY(H,x,k) 将新关键字值k（假设它不大于当前的关键字值）赋给堆H中的结点x
DELETE(H,x)


斐波那契堆：涉及删除（DELETE，EXTRACT-MIN）的操作的运行时间是O(lgn)，其他操作的平摊时间是O(1)
斐波那契堆中的树（不一定是二项树）是有根而无序的
结点域：p[x]指向父结点的指针，child[x]指向任意子女的指针，left[x]、right[x]指向左右兄弟（环状双链表），degree[x]子女个数，mark[x]布尔值，指示自从x上一次成为另一个结点子女以来，它是否失掉一个孩子（新创建的结点没有标记，x成为另一个结点的孩子的时候也没有标记）

指向最小关键字的树根的指针min[H]
H包含的结点个数n[H]

结点的最大度数有一个已知的上界D(n)
在一个包含n个结点的斐波那契堆中，结点的最大度数D(n)为O(lgn)

创建一个新的斐波那契堆
插入一个结点
寻找最小结点
合并两个斐波那契堆
抽取最小结点
减小一个关键字（更改一个关键字）
删除一个结点
