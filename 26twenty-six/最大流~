流网络：某物质从产生它的源点经过一个系统，流向消耗该物质的汇点这样一种过程
最大流问题：在不违背容量限制的条件下，把物质从源点传输到汇点的最大速率是多少

流网络G=(V,E)是一个有向图，其中每条边(u,v)属于E均有一非负容量c(u,v)>=0。如果(u,v)不属于E，则假设c(u,v)=0。流网络中有两个特别的顶点：源点s和汇点t
G的流是一个实值函数f:V×V→R，且满足三个性质：
    容量限制：对所有u，v属于V，要求f(u,v)<=c(u,v)
    反对称性：对所有u，v属于V，要求f(u,v)=-f(v,u)
    流守恒性：对所有u属于V-{s,t}，要求∑(v属于V)f(u,v)=0
流网络的预先处理：抵消处理，可以将两城市间的运输用一个流来表示，该流在两个顶点之间的至多一条边上是正的



Ford-Fulkerson方法：
    依赖于三种思想：
        残留网络 由可以容纳更多网络流的边所组成
            残留容量cf(u,v) = c(u,v) - f(u,v)
        增广路径 残留网络Gf中从s到t的一条简单路径
        流网络的割 割(S,T)将V划分为S和T=V-S两部分，使得s属于S，t属于T
            如果f是一个流，则穿过(S,T)的净流被定义为f(S,T)。割(S,T)的容量为c(S,T)。
            一个网络中的最小割是网络中具有最小容量的割
            通过割的净流可能包括顶点间的负网络流，但割的容量完全由非负值组成
    最大流最小割定理：
         如果f是具有源点s和汇点t的流网络G=(V,E)中的一个流，则下列条件是等价的：
             1）f是G的一个最大流
             2）残留网络Gf不包括增广路径
             3）对G的某个割(S,T)，有|f| = c(S,T)
    Ford-Fulkerson方法的每次迭代中，找出任意增广路径p，并根据残留容量cf(p)来增加沿p每条边的流f
    
    基本的Ford-Fulkerson算法
    Edmonds-Karp算法
        找出的增广路径是残留网络中从s到t的最短路径（其中每条边为单位距离）
        采用广度优先算法来选择增广路径
        运行时间为O(VE2)
    应用：
        最大二分匹配
            一个匹配是一个边的子集合M属于E，且满足对所有顶点v属于V，M中至多有一条边与v关联。
            假定顶点集合可被划分为V=L∪R，其中L和R是不相交的，且E中的所有边的一个端点在R中，另一端点在L中
            建立流网络：新建立顶点s，t，边(s,u),u属于L，(v,t),v属于R。每条边赋予单位容量
            二分图G的一最大匹配M的势等于其相应的流网络G`中的某一最大流f的值
            O(VE)（G`中最大流的值为min(L,R)=O(V)，Edmonds-Karp算法调用BFS算法的时间复杂度为O(E)）

压入与重标记算法：
    前置流f：满足反对称性、容量限制和放宽条件下的流守恒特性（对所有顶点u属于V-{s}，有f(V,u)>=0）
    基本操作：把流的余量从一顶点压入到它的一个相邻顶点，以及重标记一个顶点
    算法：若存在压入操作或重标记操作，则选择一个压入操作或重标记操作来执行（以任意次序执行基本操作）
    高度函数：设G=(V,E)是一个流网络，设f为G的一个前置流。函数h满足h(s)=|V|，h(t)=0，且对每条残留边(u,v)属于Ef，有h(u)<=h(v)+1
    O(V2E)

重标记与前移算法：
    通过仔细选择执行次序和有效安排网络的数据结构，可以使最大流算法的运行时间提升为O(V3)
    容许边：残留网络中压入的流经过的那些边
        容许网络中不包含回路
    相邻表N[u]仅仅包含那些可能存在残留边(u,v)的顶点v
