线段的性质：
    凸组合：点p3是p1和p2的凸组合——p3是位于穿过p1和p2的直线上、并处于p1与p2之间（也包括p1、p2）的任意点
    叉积：p1(x1,y1)×p2(x2,y2) = x1*y2-x2*y1。如果p1×p2是正数，则相对于原点来说，p1在p2的顺时针方向上；如果p1×p2为负数，则p1在p2的逆时针方向上。叉积为零说明两个向量是共线的（p1、p2与源点在一条直线上）
    确定连续线段是向左转还是向右转 O(1)
    确定两个线段是否相交 O(1)
    确定n个点中任意三点是否共线 O(n*n*lgn)

确定任意一对线段是否相交：
    “扫除”技术，算法的时间复杂度为O(nlgn)
    排序线段 2n个数的排序
    扫除线的移动 扫除线状态：全序T，红黑树实现（叉积比较取代关键字比较，以确定两个线段的相对次序） 事件点调度 红黑树的插入与删除

寻找凸包：
    点集Q的凸包是一个最小的凸多边形P，满足Q中的每个点或者在P的边界上，或者在P的内部。CH(Q)为Q的凸包
    Graham扫描法：
        通过设置一个关于候选点的堆栈S来解决问题。输入集合Q中的每个点都被压入栈一次，非CH(Q)中顶点的点最终将被弹出堆栈。选取y坐标的最小点首先放出栈中，然后将每个点关于p0的极角排序。
        O(nlgn)
    Jarvis步进法：
         “打包”技术。下一个凸包顶点p1具有相对于p0的最小极角
        O(nh)，h为CH(Q)中的顶点数

寻找最近点对：
    分治法：
        O(nlgn)
        将所有点分别左右两部分，分别找到左右部分的点的最近点对。总的最近点对不是在左右两部分中的较小点对，就是在左边的一个点与右边的一个点组成的点对处
