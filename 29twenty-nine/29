多项式时间椭圆算法 指数时间内点法 单纯形算法
线性规划的形式：标准的（约束为线性不等式）和松弛的（约束为线性等式）

将线性规划转换为标准型：
    若目标函数是最小化则将目标函数取负
    假设某个变量xj不具有非负性约束，则把xj的每次出现都以xj`-xj``来代替，并增加非负性约束xj`>=0,xj``>=0
    若存在等式约束f=b，则用f>=b和f<=b来代替
    将大于等于的约束乘以-1来转换成小于等于的约束
将线性规划转换为松弛型：
    增加松弛变量，除了非负性约束外的所有约束都是等式

单纯形算法：
    将每个非基本变量设为0，并从等式约束中计算基本变量的值。一次迭代将一个松弛型转换为一个等价的松弛型。相应的基本可行解不小于前一次迭代的目标值。实现递增：选择一个非基本变量，使得如果是要从0增加这个变量的值，则目标值也会增加。在变量上增加的数值受其他约束条件
    操作：重写等式，让变量在等式的左边和右边移动，并且用一个等式来替换为另外一个等式
    目标函数中所有的系数都是负的，只发生在当重写线性规划使得基本解就是一个最优解的时候
    PIVOT过程：换出变量x(l)，换入变量x(e)
        只有a(le)!=0时才会调用PIVOT
    SIMPLEX过程：当有个初始可行解时，过程返回一个最优可行解，或者确定线性规划是无界的
        选择换入和换出变量的方法：1）稍微扰动输入 2）按字典顺序打破一样的目标值 3）总是选择具有最小下标的变量（Bland规则）
            以保证过程会终止
    INITIALIZE-SIMPLEX过程：建立一个辅助线性规划Laux，当且仅当Laux的最优目标值为0时，L是可行的

对偶性：
    已知一个最大化的问题，定义一个相关的最小化问题，来让两个问题有相同的最优目标值
    在一个最优化问题中，一个对偶问题的识别几乎总伴随着一个多项式时间算法的发现。对偶性也可以用来证明某个解的确是最优解
